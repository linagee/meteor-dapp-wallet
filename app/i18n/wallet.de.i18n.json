{
    "elements": {
        "selectGasPrice": {
            "high": "Schneller",
            "low": "Billigere"
        },
        "checksumAlert":"Die Adresse sieht gültig , aber es funktioniert nicht, einige Sicherheits-Features , die Sie gegen Fehler zu schützen , so überprüfen Sie Sie die richtige haben . Falls vorhanden, prüfen Sie, ob das Sicherheitssymbol übereinstimmt.",
        "identiconHelper": "Dies ist ein Sicherheitssymbol , wenn es irgendeine Änderung an der Adresse das resultierende Symbol ein completelly andere sein sollte"
    },
    "wallet": {
        "app": {
            "buttons": {
                "wallet": "Wallets",
                "send": "Senden",
                "deploy": "Einsetzen",
                "tokens": "Zeichen",
                "receive": "Erhalten",
                "addWallet": "In Brieftasche Vertrag",
                "addAccount": "Konto Hinzufügen",
                "addToken": "Uhr Zeichen"
            },
            "texts": {
                "note": "Anmerken",
                "balance": "Balance",
                "connectionErrorMist": "Verbindung konnte nicht hergestellt werden. Bitte starten Sie Geth mit:<br><br><small><code>__node__</code><br><br>Stellen Sie sicher, dass Sie Ihre IPC Pfad zum einen Standard festgelegt , wenn eine andere Verwendung <code>datadir</code>, beispiel <br><code>geth --datadir ... --ipcpath /Users/&lt;yourUser&gt;/Library/Ethereum/geth.ipc</code><br>oder<br><code>geth --datadir ... --ipcpath /Users/&lt;yourUser&gt;/.ethereum/geth.ipc</code>. <br><br>Optionale Zusatz: <code>--unlock &lt;yourAccount&gt;.</code></small>",
                "connectionErrorBrowser": "Verbindung konnte nicht hergestellt werden. Bitte starten Sie Geth mit den folgenden Optionen:<br><br><small><code>__node__</code><br><br>Optionale Zusatz: <code>--unlock &lt;yourAccount&gt;.</code></small>",
                "pendingConfirmationsBadge": "Ausstehende Bestätigung!",
                "nodeSyncing": "__blockDiff__ blöcke rest",
                "blockReceived": "Neuer Blöcke empfangen",
                "timeSinceBlock": "seit dem letzten blöcke",
                "peers": "peers",
                "testnetExplain": "Sie sind auf einer testnet, SENDEN SIE UNS KEINE wirkliche Äther an diese Adressen",
                "noAccounts": {
                    "title": "Sie haben keine Konten noch",
                    "text": "Sie müssen mindestens ein Konto mit einem starken Passwort zu erstellen."
                }
            },
            "error": {
                "wrongChain": "Sie scheinen auf einer anderen Kette , starten Sie bitte die Ethereum Wallet App!"
            }
        },
        "modals": {
            "selectAccount": {
                "title": "Wählen Sie ein Konto"
            },
            "testnetWallet": {
                "walletNeedsDeployment": "Sie scheinen auf einem testnet zu sein.<br><br>Es gibt keine Originalbrieftasche Vertrag Code gefunden , müssen wir ein zu implementieren , die von den Geldbeutel Vertrag Stub Verträge verwendet werden kann , von der Ihre Adresse ein:<br><br><small><code>__account__</code></small><br><br><em>Bitte stellen Sie sicher, dass diese Adresse hat mindestens 1 ether!</em>",
                "testnetWalletDeployed": "Original- Brieftasche Vertrag eingesetzt!<br>Ein Original- Brieftasche Vertrag wurde auf der Adresse im Einsatz:<br><br><small><code>__address__</code></small>."
            },
            "addToken": {
                "title": "In Token",
                "titleEdit": "Bearbeiten -Token",
                "contractAddress": "Token Vertrag Adresse",
                "tokenName": "Token name",
                "tokenSymbol": "Token symbol",
                "decimalPlaces": "Decimals Orte der kleinsten Einheit",
                "preview": "Vorschau"
            },
            "interface": {
                "title": "Vertrag JSON -Schnittstelle",
                "description": "Wenn Sie jemand anderes ausführen , diesen Vertrag zu wollen, senden Sie diese Informationen zusammen mit der Adresse des Vertrages."
            }
        },
        "accounts": {
            "title": "<strong>Rechnung</strong> Überblick",
            "walletsTitle": "Wallet Verträge",
            "accountsTitle": "Rechnung",
            "defaultName": "Ungenannt",
            "creating": "Erstellen",
            "importing": "Einfuhr",
            "accountNote": "Konten können eingehende Transaktionen nicht angezeigt werden, sondern halten und ether schicken. Um zu sehen, eingehende Transaktionen <a href=\"/account/new\">eine Brieftasche Vertrag erstellen</a> zum Speichern von Ether.",
            "walletNote": "Die meisten Börsen unterstützen noch nicht Äther aus einem Vertrag Brieftasche zu erhalten. Achten Sie darauf, zuerst das Geld auf ein Konto -Adresse zu bewegen!",
            "addressCopiedToClipboard": "In die Zwischenablage kopiert",
            "qrCodeLabel": "Richten Sie eine kompatible mobile app zu diesem Code",
            "dailyLimit": "Tägliches Limit",
            "dailyLimitRemaining": "Rest heute",
            "requiredSignatures": "Erforderliche Unterschriften",
            "owners": "Eigentümer",
            "walletsDescription": "Dies sind Verträge , die auf der blockchain gespeichert und können halten und sicher Äther. Sie können mehrere Konten als Eigentümer haben und eine vollständige Protokoll aller Transaktionen halten.",
            "walletsDescriptionNotEnoughFunds": "Sobald Sie mehr als 1 Ether haben, können Sie eine anspruchsvollere Aufträge erstellen. Wallets sind eine Art von Grund Smart Vertrag , die Ihre Mittel ermöglicht durch mehrere Konten und verfügen über eine optionale Tageslimit  für Abhebungen gesteuert werden , die Sicherheit zu erhöhen . Um Ihre eigenen individuellen Verträge gehen auf das erstellen <em> Vertrag </em> Etikett.",
            "accountsDescription": "Accounts are password protected keys that can hold ether, secure ethereum-based tokens or coins and control contracts. Accounts can't display incoming transactions.",
            "buttons": {
                "deposit": "Deposit Ether",
                "depositBitcoin": "Deposit using Bitcoin",
                "copyAddress": "Copy address",
                "scanQRCode": "Show QR-Code",
                "showInterface": "Show Interface"
            },
            "modal": {
                "deleteText": "Do you really want to delete this wallet contract? The account will still exist on the blockchain but <br>if you delete the address, you will not be able to find and will lose access to the funds deposited<br><br> Type the name of the wallet contract to confirm the deletion.",
                "backupWallet": {
                    "title": "Backup your wallet contract address!",
                    "description": "Make sure to write down the wallet contract address:"
                }
            }
        },
        "transactions": {
            "transactionInfoTitle": "Transaction",
            "latest": "Latest transactions",
            "pendingConfirmations": "Confirmation needed",
            "none": "No transactions yet",
            "time": "Time",
            "from": "From",
            "to": "To",
            "amount": "Amount",
            "gasPrice": "Gas price",
            "perMillionGas": " PER MILLION GAS",
            "gasUsed": "Gas used", 
            "feePaid": "Fee paid",
            "data": "Send data",
            "deployedData": "Deployed data",
            "confirmations": "Confirmations",
            "unconfirmed": "Unconfirmed",
            "showMore": "Show More",
            "filter": "Filter transactions",
            "noneFound": "No matching transaction found.",
            "noOwnerAccount": "Watch only confirmation",
            "outOfGasDesc": "The transaction didn't have enough gas to execute",
            "buttons": {
                "approve": "Approve",
                "approved": "Approved",
                "revoke": "Revoke",
                "revoked": "Revoked"
            },
            "error": {
                "noDataDeployed": "No data is deployed on the contract address!"    
            },
            "types": {
                "executeContract": "Contract Execution",
                "betweenWallets": "Transfer between accounts",
                "sent": "Sent",
                "received": "Received",
                "outOfGas": "Transaction not executed",
                "createdContract": {
                    "title": "Created contract",
                    "at": "Created contract at"
                },
                "creatingContract": "Creating contract",
                "tokenTransfer": "__token__ - Token transfer",
                "pendingConfirmations": "__initiator__ wants to send from __from__"
            },
            "notifications": {
                "incomingTransaction": {
                    "title": "Payment received",
                    "text": "You received __amount__ on __to__ from __from__."
                },
                "outgoingTransaction": {
                    "title": "Payment send",
                    "text": "You send __amount__ from __from__ to __to__."    
                },
                "pendingConfirmation": {
                    "title": "Confirmation needed",
                    "text": "__initiator__ wants to send __amount__ from __from__ to __to__"
                },
                "tokenTransfer": {
                    "title": "__token__ - Token transfer",
                    "text": "__amount__ __token__  were send from __from__ to __to__."
                }
            }
        },
        "newWallet": {
            "title": "New <strong>wallet contract</strong>",
            "accountName": "Wallet contract name",
            "selectOwner": "Select owner",
            "accountType": {
                "title": "Wallet contract type",
                "simple": {
                    "title": "Single owner account",
                    "description": "A simple contract without additional security measures.",
                    "warning": "Note: If your owner account is compromised your wallet has no protection."
                },
                "multisig": {
                    "title": "Multisignature wallet contract",
                    "description": "A contract controlled by multiple accounts",
                    "text1": "This is a joint account controlled by",
                    "text2": "owners. You can send up to",
                    "text3": "ether per day.",
                    "text4": "Any transaction over that daily limit requires the confirmation of",
                    "text5": "owners.",
                    "accountOwnersTitle": "Account owners",
                    "ownerAddress": "Owner address"
                },
                "import": {
                    "title": "Import wallet",
                    "description": "Import an existing (multisignature) wallet.",
                    "walletAddress": "Wallet address",
                    "youreOwner": "Your \"__account__\" account is an owner of this wallet contract.",
                    "watchOnly": "You don't own the account, but you can add it as a \"WATCH ONLY\" account.",
                    "notWallet": "This address has no wallet contract."
                }
            },
            "error": {
                "emptySignees": "You didn't provided all owners.",
                "alreadyExists": "Account already exists.",
                "stubHasNoOrigWalletAddress": "Your stub contract has no original account address set, please restart your App!",
                "contractsCantBeOwners": "Contracts can't be owners.",
                "checkOwnerAddress": "Please change the contract address __address__ to an account."
            }
        },
        "send": {
            "title": "<strong>Send</strong> funds",
            "sendInfoTitle": "Send",
            "pickAddress": "Pick an address",
            "to": "To",
            "from": "From",
            "amount": "Amount",
            "tokenAmount": "Token amount",
            "sendFunds": "Send funds",
            "deployContract": "Deploy contract",
            "data": "Data",
            "fee": "Select Fee",
            "feeLow": "Cheaper",
            "feeHigh": "Faster",
            "addData": "Add data",
            "removeData": "Remove data",
            "estimatedFee": "Estimated fee",
            "createContract": "Create contract",
            "provideGas": "Provide gas",
            "error": {
                "emptyWallet": "The account you want to send from is empty.",
                "notEnoughFunds": "You don't have enough funds in the account.",
                "noReceiver": "You didn't specify a receiver.",
                "noAmount": "You didn't specify an amount to send."
            },
            "texts": {
                "sendAmount": "You want to send <strong>__amount__</strong>.",
                "sendAmountEquivalent": "You want to send <strong>__amount__</strong> in ether, using exchange rates from <a href=\"https://www.cryptocompare.com/coins/eth/overview/BTC\" target=\"_blank\">cryptocompare.com</a>.<br>Which is currently an equivalent of <strong>__etherAmount__</strong>.",
                "sendToken": "You want to send <strong>__amount__ __symbol__</strong> of <strong> __name__</strong>.",
                "overDailyLimit": "<p class=\"over-daily\">This amount is over the remaining daily limit of __limit__ (of __total__ per day), so you need __count__ other account to confirm.</p>",
                "overDailyLimit_plural": "<p class=\"over-daily\">This amount is over the remaining daily limit of __limit__ (of __total__ per day), so you need __count__ other accounts to confirm.</p>",
                "underDailyLimit": "<p class=\"under-daily\">This amount is under the remaining daily limit of __limit__ (of __total__ per day), means it will send immediately.</p>",
                "sendFee": "This is the most amount of money that might be used to process this transaction. Your transaction will be mined <strong>__timetext__</strong>.",
                "noCodeInRecipient": "The recipient account is not a contract, so you can't execute anything. <strong> Put a contract address on the 'TO' field. </strong>",
                "addData": "You can add extra data to send along with your transaction. If you leave the \"to\" field empty it will try to deploy a contract from your data.",
                "dataNotExecutable": "The data seems not to be executabe, that means this transaction will use all the gas you provide.",
                "cantEstimateGas": "We can't estimate your gas usage properly, as you need at least 1 ether in your account.",
                "estimatedGas": "Estimated required gas",
                "timeTexts": {
                    "0": "in a few minutes or more",
                    "1": "likely within a few minutes",
                    "2": "usually within a minute",
                    "3": "probably within 30 seconds",
                    "4": "probably within a few seconds",
                    "5": "probably within a few seconds"
                }
            }
        },
        "tokens": {
            "title": "Custom <strong>Tokens</strong>",
            "subTitle": "Added tokens",
            "admin": "__name__ (admin page)",
            "description": "Tokens are currencies and other fungibles built on the Ethereum platform. In order for accounts to watch for tokens and send them, you have to add their address to this list. You can create your own token by simply modifiying <a href=\"http://chriseth.github.io/browser-solidity/?gist=0d1a998d949e26942212\" target=\"_blank\">this example of a custom token contract</a> or learning more about <a href=\"https://www.ethereum.org/token#the-code\" target=\"_blank\">Ethereum Tokens</a>.",
            "deleteToken": "Do you want to remove the token <strong>__token__</strong> from your list?",
            "addedToken": "Added __token__ to your watch list",
            "editedToken": "Edited token __token__",
            "error": {
                "invalidAddress": "Token not added, invalid address."
            }
        },
        "contracts": {
            "contractTitle" : "Contracts",
            "deployNewContract": "Deploy new contract",
            "addCustomContract": "Watch contract",
            "customContracts": "Custom contracts",
            "description": "In order to watch and interact with a contract already deployed on the blockchain you need to know its address and description of its interface in JSON format.",
            "deployContract": "<strong>Deploy</strong> contract",
            "contractSourceCode": "Solidity contract source code",
            "contractByteCode": "Contract byte code",
            "selectContract": "Select contract to deploy",
            "constructorParameters": "Constructor parameters",
            "name": "Contract Name",
            "address": "Contract Address",
            "jsonInterface": "JSON Interface",
            "contractInformation": "Contract Information",
            "addedContract": "Added custom contract",
            "readFromContract": "Read from contract",
            "writeToContract": "Write to contract",
            "pickContract": "Pick a contract",
            "pickFunction": "Pick a function",
            "noContract": "<p>Put the source of the contract you want here. You can find many examples of contracts at the <a href=\"http://ethereum.org\" target=\"_blank\">ethereum.org</a>: </p> <ul><li><a href=\"http://ethereum.org/token\" target=\"_blank\">Build a token</a></li><li><a href=\"http://ethereum.org/crowdsale\" target=\"_blank\">Start a crowdsale</a></li><li><a href=\"http://ethereum.org/dao\" target=\"_blank\">Create a blockchain organization</a></li></ul>",
            "buttons": {
                "showContractInfo": "Show contract info",
                "hideContractInfo": "Hide contract info",
                "execute": "Execute",
                "yes": "Yes"
            },
            "error": {
                "compile": "Could not compile source code.",
                "noDataProvided": "No Data found: select a contract from the 'select contract' menu",
                "invalidAddress": "Contract not added, invalid address.",
                "jsonInterfaceParseError": "Couldn't parse the JSON Interface."
            }
        }

    }
}
